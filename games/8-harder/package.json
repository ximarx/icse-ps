{
	"name": "Gioco dell'8",
	"version": "1",
	"type": "path-search",
	"templates" : {
		"file": "templates.json",
		"parser": "icse.ps.facts.templates.Parser.Parser"
	},
	"initial-facts": {
		"file": "facts.json",
		"parser": "icse.ps.facts.Parser.Parser"
	},
	"goals": {
		"file": "goals.txt",
		"parser": "icse.ps.rules.Parser.Parser",
		"grammar": "icse.ps.rules.goal.ClipsLike.ClipsLike"
	},
	"rules": {
		"file": "rules.txt",
		"parser": "icse.ps.rules.Parser.Parser",
		"grammar": "icse.ps.rules.grammatiche.ClipsLike.ClipsLike"
	},
	"env": {
		"problem-type": "search",
		"strategies" : [
			{
				"name": "Blind Depth Search",
				"class": "icse.ps.algoritmi.Depth.Depth",
				"options": {
					"max-depth": 10000,
					"loop-guard": true,
					"conflict-solver": null
				},
				"note": ""
			},
			{
				"name": "Blind Breadth Search",
				"class": "icse.ps.algoritmi.Breadth.Breadth",
				"options": {
					"max-nodes": 10000,
					"loop-guard": true,
					"conflict-solver": null
				},
				"note": ""
			},
			{
				"name": "Best First Search",
				"class": "icse.ps.algoritmi.Depth.Depth",
				"options": {
					"max-depth": 10000,
					"loop-guard": true,
					"conflict-solver": "Heuristic.BestFirstSorter"
				},
				"note": "Implementato tramite Depth, ma con introduzione di euristica tramite ordinamento delle regole"
			},
			{
				"name": "Best Only Search",
				"class": "icse.ps.algoritmi.Depth.Depth",
				"options": {
					"max-depth": 10000,
					"loop-guard": true,
					"conflict-solver": "Heuristic.BestOnlyPruner"
				},
				"note": "Implementato tramite Depth, ma con euristica per potare tutte le regole non ottimali localmente"
			},
			{
				"name": "A* senza euristica",
				"class": "icse.ps.algoritmi.Astar.Astar",
				"options": {
					"h_lambda": null,
					"distance_lambda": null,
					"h_factor": 1
				},
				"note": "Corrispondente ad una ricerca tramite Breadth"
			},
			{
				"name": "A* con euristica 'Tasselli fuori posto'",
				"class": "icse.ps.algoritmi.Astar.Astar",
				"options": {
					"h_lambda": "Heuristic.TasselliFuoriPosto",
					"distance_lambda": null,
					"h_factor": 1
				},
				"note": ""
			},
			{
				"name": "A* con euristica Manhattan Distance",
				"class": "icse.ps.algoritmi.Astar.Astar",
				"options": {
					"h_lambda": "Heuristic.ManhattanDistance",
					"distance_lambda": null,
					"h_factor": 1
				},
				"note": ""
			}
		]
	},
	"optimizations": {
		"status-serializer" : "Optimizations.serializer",
	}
}
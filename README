Production system

GIOCO DELL'8

{{{ Stato iniziale

 -----------
 | 2  8  3 |
 | 1  6  4 | 
 | 7  #  5 |
 -----------

}}}

{{{ Stato finale

 -----------
 | 1  2  3 |
 | 8  #  4 | 
 | 7  6  5 |
 -----------
 
}}}

{{{ PATTERN PER IL RICONOSCIMENTO

-- Riconoscimento delle regole --
	^defrule\s+(?P<nome>[^:]+?):\s+(?P<pre>.*?)\s+==>\s+(?P<post>.*?)\s+^:defrule\s*$

	ottiene nome, pre, post
	
-- Riconoscimento delle singole condizioni
	^\s*(?P<operatore>\w+)\s*?\((?P<attributi>.*?)\)\s*?$
	
	ottiene operatore, attributi
	
	

{{{ Regole

defrule sposta-vuoto-su:
	esiste( ?X, Template Cella)
	esiste( ?Y, Template Cella)
	uguale( attributo(X, valore), NULL )
	uguale( attributo(Y, y), sottrazione( attributo(X, y), 1) )
	uguale( X.x, Y.x )
==>
	cambiaFatto(X, y, sottrazione(X.y, 1))
	cambiaFatto(Y, y, somma(Y.y, 1))
	disabilitaRegolaPer(sposta-vuoto-giu, 1)
:defrule

-- da correggere le seguenti per:
	- attributo (al posto di X.y)
	
defrule sposta-vuoto-giu:
	esiste( ?X, Template Cella)
	esiste( ?Y, Template Cella)
	uguale( X.valore, NULL )
	uguale( Y.y, somma(X.y, 1) )
	uguale( X.x, Y.x )
==>
	cambiaFatto(X, y, somma(X.y, 1))
	cambiaFatto(Y, y, sottrazione(Y.y, 1))
	disabilitaRegolaPer(sposta-vuoto-su, 1)

defrule sposta-vuoto-sx:
	esiste( ?X, Template Cella)
	esiste( ?Y, Template Cella)
	uguale( X.valore, NULL )
	uguale( Y.x, sottrazione(X.x, 1) )
	uguale( X.y, Y.y )
==>
	cambiaFatto(X, x, sottrazione(X.x, 1))
	cambiaFatto(Y, x, somma(Y.x, 1))
	disabilitaRegolaPer(sposta-vuoto-dx, 1)
	
defrule sposta-vuoto-dx:
	esiste( ?X, Template Cella)
	esiste( ?Y, Template Cella)
	uguale( X.valore, NULL )
	uguale( Y.x, somma(X.x, 1) )
	uguale( X.y, Y.y )
==>
	cambiaFatto(X, x, somma(X.x, 1))
	cambiaFatto(Y, x, sottrazione(Y.x, 1))
	disabilitaRegolaPer(sposta-vuoto-sx, 1)
	
}}}